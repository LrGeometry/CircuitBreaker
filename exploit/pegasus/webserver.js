const fs = require("fs");
const path = require("path");
const os = require("os");
const dns = require("dns");

const dnsd = require("dnsd");
const ip = require("ip");
const express = require("express");

const request = require("request");

let dnssrv = dnsd.createServer((req, res) => {
  if(req.question[0]) {
    if(req.question[0].name.includes("conntest.nintendowifi.net")) {
      res.end(ip.address());
      return;
    }
    if(req.question[0].name.includes("nintendo")) {
      res.end(ip.address());
      return;
    }
    dns.lookup(req.question[0].name, (err, addr, family) => {
      res.end(addr);
    });
  }
});

dnssrv.listen(53, "0.0.0.0");

const app = express();

app.get("/", (req, res) => {
  res.end(fs.readFileSync(path.resolve(__dirname, "public/index.html")));
});

app.get("/minmain.js", (req, res) => {
  res.end(fs.readFileSync(path.resolve(__dirname, "public/minmain.js")));
});

app.get("/bundle.js", (req, res) => {
  res.end(fs.readFileSync(path.resolve(__dirname, "public/bundle.js")));
});

app.use(function(req, res, next) {
  res.header("Access-Control-Allow-Origin", "*");
  res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
  next();
});

app.listen(80, "0.0.0.0", (err) => {
  if(err) {
    console.error("Could not bind port 80");
    process.exit(1);
  }
});
